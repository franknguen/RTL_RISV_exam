$date
	Fri Mar 17 11:14:46 2023
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var wire 1 ! CLK $end
$var wire 32 " IN [31:0] $end
$var wire 5 # INADDRESS [4:0] $end
$var wire 32 $ OUT1 [31:0] $end
$var wire 5 % OUT1ADDRESS [4:0] $end
$var wire 32 & OUT2 [31:0] $end
$var wire 5 ' OUT2ADDRESS [4:0] $end
$var wire 1 ( RESET $end
$var wire 1 ) WRITE_EN $end
$var integer 32 * i [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 + \REGISTERS[0] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 , \REGISTERS[1] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 - \REGISTERS[2] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 . \REGISTERS[3] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 / \REGISTERS[4] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 0 \REGISTERS[5] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 1 \REGISTERS[6] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 2 \REGISTERS[7] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 3 \REGISTERS[8] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 4 \REGISTERS[9] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 5 \REGISTERS[10] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 6 \REGISTERS[11] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 7 \REGISTERS[12] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 8 \REGISTERS[13] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 9 \REGISTERS[14] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 : \REGISTERS[15] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 ; \REGISTERS[16] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 < \REGISTERS[17] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 = \REGISTERS[18] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 > \REGISTERS[19] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 ? \REGISTERS[20] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 @ \REGISTERS[21] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 A \REGISTERS[22] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 B \REGISTERS[23] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 C \REGISTERS[24] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 D \REGISTERS[25] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 E \REGISTERS[26] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 F \REGISTERS[27] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 G \REGISTERS[28] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 H \REGISTERS[29] [31:0] $end
$upscope $end
$upscope $end
$scope module reg_file_tb $end
$scope module my_reg_file $end
$var reg 32 I \REGISTERS[30] [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
0)
1(
b1 '
bx &
b11 %
bx $
b0 #
b10 "
0!
$end
#10
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 $
b0 -
b0 ,
b0 &
b0 +
b100000 *
1!
#20
0(
0!
#30
b10 +
1)
1!
#40
b10 %
0)
0!
#50
b10 '
b10 $
b0 %
1!
#60
b1 '
0!
#70
b0 I
b0 H
b0 G
b0 F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 $
b100000 *
b10 '
1(
1!
#80
